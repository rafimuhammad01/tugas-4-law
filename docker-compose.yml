version: '3.5'
services:
  api-gateway:
    container_name: api-gateway-service
    build:
      context: ./api-gateway-service
      dockerfile: Dockerfile
    ports:
      - "${GATEWAY_PORT:-8080}:8080"
    environment:
      - GATEWAY_PORT=8080
      - UPDATE_PORT=5002
      - UPDATE_HOST=update
      - READ_PORT=5001
      - READ_HOST=read
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-MJFoDp7198uXUyBpLj44}
    depends_on:
      - redis
      - read
      - update

  read:
    container_name: read-service
    build:
      context: ./read-service
      dockerfile: Dockerfile
    ports:
      - "${READ_PORT:-5001}:5001"
    environment:
      - READ_PORT=5001
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_NAME=${DB_NAME:-tugas4db}
      - DB_PORT=5432
    depends_on:
      - postgres

  update:
    container_name: update-service
    build: 
      context: ./update-service
      dockerfile: Dockerfile
    ports:
      - "${UPDATE_PORT:-5002}:5002"
    environment:
      - UPDATE_PORT=5002
      - DB_HOST=${DB_HOST:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_NAME=${DB_NAME:-tugas4db}
      - DB_PORT=5432
    depends_on:
      - postgres

  postgres:
    container_name: postgres-tugas4
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-root}
      POSTGRES_DB: ${DB_NAME:-tugas4db}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "${DB_PORT:-5432}:5432"
    restart: unless-stopped

  redis:
    container_name: redis-tugas4
    image: redis:6.2-alpine
    restart: always
    ports:
      - "${REDIS_PORT-6379}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD:-MJFoDp7198uXUyBpLj44}
    volumes:
      - cache:/data/redis

volumes:
  postgres:
  cache:
